def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a


def gcd_list(lst):
    divisor = 0
    for n in lst:
        divisor = gcd(divisor, n)
    return divisor


def combine(row1, index1, row2, index2):
    if index1 == index2:
        return row1

    indices = (set(range(len(row1))) - {index1, index2})
    probability = [0] * len(row1)

    for i in indices:
        probability[i] = sum(row2) * row1[i] + row1[index2] * row2[i]

    gcd = gcd_list(probability)
    probability = [i / gcd for i in probability]
    return probability


def solution(matrix):
    size = len(matrix)

    for col, line in enumerate(matrix):
        line[col] = 0

    sums = [sum(line) for line in matrix]
    absorbing_states = [i for i, item in enumerate(sums) if item == 0]
    transient_states = list((set(range(size)) - set(absorbing_states)))

    for i in range(len(transient_states)):
        index1 = transient_states[i]
        for j in range(len(transient_states)):
            index2 = transient_states[j]
            matrix[index2] = combine(
                matrix[index2], index2, matrix[index1], index1)

    probability = [matrix[0][state] for state in absorbing_states]

    divisor = sum(probability)

    if divisor != 0:
        probability.append(divisor)
    else:
        probability = [1] * len(absorbing_states)
        probability.append(len(absorbing_states))

    return probability


s1 = solution([
    [0, 2, 1, 0, 0],
    [0, 0, 0, 3, 4],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0]
])
print(s1 == [7, 6, 8, 21], s1)

s2 = solution([
    [0, 1, 0, 0, 0, 1],
    [4, 0, 0, 3, 2, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0]
])
print(s2 == [0, 3, 2, 9, 14], s2)

s3 = solution([
    [0, 0, 1, 0, 0, 1],
    [0, 0, 0, 0, 0, 0],
    [4, 0, 0, 2, 3, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0]
])
print(s3 == [0, 2, 3, 9, 14], s3)

s4 = solution([
    [0, 86, 61, 189, 0, 18, 12, 33, 66, 39],
    [0, 0, 2, 0, 0, 1, 0, 0, 0, 0],
    [15, 187, 0, 0, 18, 23, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
])
print(s4 == [6, 44, 4, 11, 22, 13, 100], s4)

s5 = solution([
    [0, 86, 61, 189, 0, 18, 12, 33, 66, 39],
    [0, 0, 2, 0, 0, 1, 0, 0, 0, 0],
    [15, 187, 0, 0, 18, 23, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
])
print(s5 == [6, 44, 4, 11, 22, 13, 100], s5)

s6 = solution([[0, 2, 1, 0, 0], [0, 0, 0, 3, 4], [
              0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]])
print(s6 == [7, 6, 8, 21], s6)

s7 = solution([[0, 1, 0, 0, 0, 1], [4, 0, 0, 3, 2, 0], [0, 0, 0, 0, 0, 0], [
              0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]])
print(s7 == [0, 3, 2, 9, 14], s7)

s8 = solution([[0, 2, 1, 0, 0], [0, 0, 0, 3, 4], [
              0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]])
print(s8 == [7, 6, 8, 21], s8)

s9 = solution([[0, 1, 0, 0, 0, 1], [4, 0, 0, 3, 2, 0], [0, 0, 0, 0, 0, 0], [
              0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]])
print(s9 == [0, 3, 2, 9, 14], s9)

s10 = solution([[1, 2, 3, 0, 0, 0], [4, 5, 6, 0, 0, 0], [7, 8, 9, 1, 0, 0], [
               0, 0, 0, 0, 1, 2], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]])
print(s10 == [1, 2, 3], s10)

s11 = solution([[0]])
print(s11 == [1, 1], s11)

s12 = solution([[0, 0, 12, 0, 15, 0, 0, 0, 1, 8], [0, 0, 60, 0, 0, 7, 13, 0, 0, 0], [0, 15, 0, 8, 7, 0, 0, 1, 9, 0], [23, 0, 0, 0, 0, 1, 0, 0, 0, 0], [37, 35, 0, 0, 0, 0, 3, 21, 0, 0], [
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
print(s12 == [1, 2, 3, 4, 5, 15], s12)

s13 = solution([[0,  7,  0, 17,  0,  1,  0,  5,  0,  2], [0,  0, 29,  0, 28,  0,  3,  0, 16,  0], [0,  3,  0,  0,  0,  1,  0,  0,  0,  0], [48,  0,  3,  0,  0,  0, 17,  0,  0,  0], [0,  6,  0,  0,  0,  1,  0,  0,  0,  0], [
               0,  0,  0,  0,  0,  0,  0,  0,  0,  0], [0,  0,  0,  0,  0,  0,  0,  0,  0,  0], [0,  0,  0,  0,  0,  0,  0,  0,  0,  0], [0,  0,  0,  0,  0,  0,  0,  0,  0,  0], [0,  0,  0,  0,  0,  0,  0,  0,  0,  0]])
print(s13 == [4, 5, 5, 4, 2, 20], s13)

s14 = solution([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
print(s14 == [1, 1, 1, 1, 1, 5], s14)

s15 = solution([[1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
print(s15 == [2, 1, 1, 1, 1, 6], s15)

s16 = solution([[0, 86, 61, 189, 0, 18, 12, 33, 66, 39], [0, 0, 2, 0, 0, 1, 0, 0, 0, 0], [15, 187, 0, 0, 18, 23, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [
               0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
print(s16 == [6, 44, 4, 11, 22, 13, 100], s16)

s17 = solution([[0, 0, 0, 0, 3, 5, 0, 0, 0, 2], [0, 0, 4, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 4, 4, 0, 0, 0, 1, 1], [13, 0, 0, 0, 0, 0, 2, 0, 0, 0], [0, 1, 8, 7, 0, 0, 0, 1, 3, 0], [
               1, 7, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
print(s17 == [1, 1, 1, 2, 5], s17)
